import { resolve } from "node:path";
import { readFileSync } from "node:fs";
import { homedir } from "node:os";

import {
  createKeyPairFromBytes,
  createSignerFromKeyPair,
  KeyPairSigner,
} from "@solana/web3.js";

import { DEFAULT_CLI_KEYPAIR_PATH } from "./const";

/**
 * Load a `KeyPairSigner` from a filesystem wallet json file
 * (i.e. those generated by the `solana-keygen` command)
 */
export async function loadKeypairSignerFromFile(
  filePath: string = DEFAULT_CLI_KEYPAIR_PATH,
): Promise<KeyPairSigner> {
  const keypair = await loadKeypairFromFile(filePath);
  //
  return createSignerFromKeyPair(keypair);
}

/**
 * Load a `CryptoKeyPair` from a filesystem wallet json file
 * (i.e. those generated by the `solana-keygen` command)
 */
export async function loadKeypairFromFile(
  filePath: string = DEFAULT_CLI_KEYPAIR_PATH,
): Promise<CryptoKeyPair> {
  const resolvedPath = resolve(
    filePath.startsWith("~") ? filePath.replace("~", homedir()) : filePath,
  );
  return createKeyPairFromBytes(
    Uint8Array.from(JSON.parse(readFileSync(resolvedPath, "utf8"))),
  );
}
